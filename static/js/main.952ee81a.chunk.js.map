{"version":3,"sources":["components/Filter/styles.module.scss","components/ContactList/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","action","filter","_","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getContacts","stateFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","className","styles","title","onSubmit","event","preventDefault","findContact","find","item","findNumber","toast","warning","contactsActions","form","label","text","input","type","value","onChange","target","pattern","required","button","content","ContactList","list","map","onClick","onDeleteContact","Filter","useCallback","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.952ee81a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/Delete');\nconst changeFilter = createAction('contacts/ChangeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst primeContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contacts = createReducer(primeContacts, {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { createSelector } from '@reduxjs/toolkit';\nexport const getContacts = state => state.contacts.contacts;\nexport const stateFilter = state => state.contacts.filter;\nexport const getVisibleContacts = createSelector(\n  [getContacts, stateFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState} from \"react\";\nimport {getContacts} from '../../redux/contacts/contacts-selectors'\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\nimport { useDispatch, useSelector} from \"react-redux\";\n\n\nconst Form  = () => { \n       const dispatch = useDispatch()\n       const contacts = useSelector(getContacts)\n\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const addName = (event) => {\n        setName(event.target.value)\n    }\n    const addNumber = (event) => {\n      setNumber(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n\n    const findContact = contacts.find(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    const findNumber = contacts.find((item) => item.number === number) \n    if (findContact) {\n      toast.warning(`${name} is already in contacts`);\n      \n      return;\n    }\n    else if(findNumber){\n      toast.warning(`${number} is already in contacts`);\n      \n      return;\n    }\n    dispatch(contactsActions.addContact({name,number}))\n    setNumber('')\n    setName('')\n  }\n  \n        return(\n        <>\n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={name}\n                  onChange={addName}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={number}\n                  onChange={addNumber}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n\nexport default Form;","import { useDispatch, useSelector} from 'react-redux';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from './styles.module.scss'\n\nconst ContactList = () =>{\n    const dispatch = useDispatch()\n    const contacts = useSelector(getVisibleContacts)\n\n    const onDeleteContact = (id) => dispatch(contactsActions.deleteContact(id));\n    return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={() => onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\nexport default ContactList;\n","import {useCallback} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport { stateFilter } from '../../redux/contacts/contacts-selectors';\nimport styles from './styles.module.scss'\n\nconst Filter = () => {\n    const dispatch = useDispatch()\n    const value = useSelector(stateFilter)\n    const onChange = useCallback((event) => {dispatch(contactsActions.changeFilter(event.target.value))},[dispatch]);\n\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\nexport default Filter;","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconst App = () => (\n  <>\n    <Form />\n    <Filter />\n    <ContactList />\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\n//\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}