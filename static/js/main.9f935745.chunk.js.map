{"version":3,"sources":["components/Filter/styles.module.scss","components/ContactList/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-action.ts","redux/contacts/contacts-reducer.ts","redux/store.ts","redux/contacts/contacts-selectors.ts","components/Form/Form.tsx","components/ContactList/ContactList.tsx","components/Filter/Filter.tsx","App.tsx","index.tsx"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","type","state","action","filter","_","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getContacts","stateFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","dispatch","useDispatch","useSelector","useState","setName","setNumber","className","styles","title","onSubmit","event","preventDefault","findContact","find","item","findNumber","toast","warning","contactsActions","success","form","label","text","input","value","onChange","target","pattern","required","button","content","ContactList","useCallback","list","map","onClick","info","onDeleteContact","Filter","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9f935745.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\ninterface IContact{\n  id?: string\n  name:string\n  number:string\n}\n\nconst addContact = createAction('contacts/Add', ({ name, number }: IContact) => ({\n  payload: {\n    id: shortid.generate(),\n    name: name,\n    number: number,\n  },\n}));\n\nconst deleteContact = createAction<string>('contacts/Delete');\nconst changeFilter = createAction<string>('contacts/ChangeFilter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\n\nconst primeContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\ninterface IContact{\n  id: string\n  name:string\n  number:string\n}\n\nconst contacts = createReducer(primeContacts as IContact [], {\n  [actions.addContact.type]: (state, action) => [...state, action.payload],\n  [actions.deleteContact.type]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter.type]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { createSelector } from '@reduxjs/toolkit';\nimport {IStateContact} from '../../interfaces/interfaceContact'\nimport {IFilterState} from '../../interfaces/interfaceFilter'\n \n\nexport const getContacts = (state:IStateContact) => state.contacts.contacts;\nexport const stateFilter = (state:IFilterState)=> state.contacts.filter;\nexport const getVisibleContacts = createSelector(\n  [getContacts, stateFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import { useState} from \"react\";\nimport {getContacts} from '../../redux/contacts/contacts-selectors'\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\nimport { useDispatch, useSelector} from \"react-redux\";\n\n\nconst Form  = () => { \n       const dispatch = useDispatch()\n       const contacts = useSelector(getContacts)\n\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const addName = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setName(event.target.value)\n    }\n    const addNumber = (event:React.ChangeEvent<HTMLInputElement>) => {\n      setNumber(event.target.value)\n  }\n\n  const handleSubmit = (event:React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n\n    const findContact = contacts.find(\n      (item) => item.name.toLowerCase() === name.toLowerCase()\n    );\n    const findNumber = contacts.find((item) => item.number === number) \n    if (findContact) {\n      toast.warning(`${name} is already in contacts`);\n      \n      return;\n    }\n    else if(findNumber){\n      toast.warning(`${number} is already in contacts`);\n      \n      return;\n    }\n    dispatch(contactsActions.addContact({name,number}))\n    toast.success(`${name} added successfully`);\n    setNumber('')\n    setName('')\n  }\n  \n        return(\n        <>\n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={name}\n                  onChange={addName}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={number}\n                  onChange={addNumber}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n\nexport default Form;","import { useDispatch, useSelector} from 'react-redux';\nimport {useCallback} from 'react';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from './styles.module.scss'\nimport { toast } from 'react-toastify';\n\n\n\nconst ContactList = () =>{\n\n    \n    const dispatch = useDispatch()\n    const contacts = useSelector(getVisibleContacts)\n\n    const deleteContact = useCallback((id) => {dispatch(contactsActions.deleteContact(id))},[dispatch]);\n\n    const onDeleteContact = (id:string, name:string) => {\n        deleteContact(id)\n        toast.info(`${name} was successfully removed from the list`);\n    }\n\n    return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={() => onDeleteContact(id, name)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\nexport default ContactList;\n","import {useCallback} from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport { stateFilter } from '../../redux/contacts/contacts-selectors';\nimport styles from './styles.module.scss'\n\nconst Filter = () => {\n    const dispatch = useDispatch()\n    const value = useSelector(stateFilter)\n    const onChange = useCallback((event) => {dispatch(contactsActions.changeFilter(event.target.value))},[dispatch]);\n\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\nexport default Filter;","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconst App = () => (\n  <>\n    <Form />\n    <Filter />\n    <ContactList />\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\n//\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}