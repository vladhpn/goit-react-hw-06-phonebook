{"version":3,"sources":["components/ContactList/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-action.js","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Filter/styles.module.scss"],"names":["module","exports","combineReducers","contact","state","type","payload","types","filter","id","rootReducer","contacts","contactsReducer","store","createStore","composeWithDevTools","name","number","shortid","generate","value","Form","handleInputChange","event","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","title","this","form","label","text","input","onChange","pattern","required","button","content","Component","connect","dispatch","contactsActions","onDeleteContact","list","map","item","onClick","e","target","App","changeFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd10fb35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","// const ADD = 'contacts/Add';\n// const DELETE = 'contacts/Delete';\n// const CHANGE_FILTER = 'contacts/ChengeFilter';\n\nexport default {\n  ADD: 'contacts/Add',\n  DELETE: 'contacts/Delete',\n  CHANGE_FILTER: 'contacts/ChangeFilter',\n};\n","import { combineReducers } from 'redux';\nimport types from './contacts-types';\n\nconst contact = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n    case types.DELETE:\n      return state.filter(({ id }) => id !== payload);\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  contact,\n  filter,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import shortid from 'shortid';\nimport types from './contacts-types';\n\nconst addContact = ({ name, number }) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nconst changeFilter = value => ({\n  type: types.CHANGE_FILTER,\n  payload: value,\n});\n\nexport default { addContact, deleteContact, changeFilter };\n","import { Component } from \"react\";\nimport { connect} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n    state = {\n        name: '',\n        number: '',\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n   \n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({'name' : '', 'number' : ''})\n      }\n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name,number) => dispatch(contactsActions.addContact(name,number))\n})\n\nexport default connect(null, mapDispatchToProps)(Form);","import { connect } from 'react-redux'\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\n\n    const mapStateToProps = (state) => ({\n        contacts: state.contacts.contact\n    })\n    const mapDispatchToProps = dispatch => ({\n        onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n    })\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      // Filter.propTypes = {\n      //   value: PropTypes.string.isRequired,\n      //   onChange: PropTypes.func.isRequired\n      // }\n\n//  const getVisibleContact = () => {\n//     const { contacts, filter } = this.state;\n\n//     const normilizeFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normilizeFilter),\n//     );\n//   };\n\n\n      const mapStateToProps = (state) => {\n       return {\n         value: state.contacts.filter\n        } \n    }\n     const mapDispatchToProps =  dispatch => ({\n       onChange: e => dispatch(contactsActions.changeFilter(e.target.value))\n     })\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Filter);","import { Component } from 'react';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nclass App extends Component {\n  // state = {\n  //   contacts: [\n  //     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  //     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  //     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  //     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  //   ],\n  //   filter: '',\n  // };\n\n  // addContact = ({ name, number }) => {\n  //   const contact = {\n  //     id: shortid.generate(),\n  //     name,\n  //     number,\n  //   };\n\n  //   const { contacts } = this.state;\n\n  //   contacts.find(\n  //     ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n  //   )\n  //     ? toast.warning(`${name} is already in contacts`)\n  //     : this.setState(({ contacts }) => ({\n  //         contacts: [contact, ...contacts],\n  //       }));\n  // };\n\n  // deleteContact = id => {\n  //   this.setState(prevState => ({\n  //     contacts: prevState.contacts.filter(contact => contact.id !== id),\n  //   }));\n  // };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  // getVisibleContact = () => {\n  //   const { contacts, filter } = this.state;\n\n  //   const normilizeFilter = filter.toLowerCase();\n\n  //   return contacts.filter(contact =>\n  //     contact.name.toLowerCase().includes(normilizeFilter),\n  //   );\n  // };\n  // componentDidMount() {\n  //   const contacts = localStorage.getItem('contacts');\n  //   const parsedContacts = JSON.parse(contacts);\n\n  //   if (parsedContacts) {\n  //     this.setState({ contacts: parsedContacts });\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (this.state.contacts !== prevState.contacts) {\n  //     localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n  //   }\n  // }\n\n  render() {\n    // const { filter } = this.state;\n\n    // const filteredContacts = this.getVisibleContact();\n\n    return (\n      <>\n        <Form />\n\n        <Filter />\n        <ContactList\n        // contacts={filteredContacts}\n        // onDeleteContact={this.deleteContact}\n        />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n// Form onSubmit={this.addContact}\n// Filter value={filter} onChange={this.changeFilter}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\n//\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};"],"sourceRoot":""}