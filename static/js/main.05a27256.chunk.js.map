{"version":3,"sources":["components/ContactList/styles.module.scss","components/Form/styles.module.scss","components/Filter/styles.module.scss","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/store.js","App.js","index.js"],"names":["module","exports","Form","nameInputId","shortid","generate","state","name","number","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","className","styles","title","this","form","label","text","input","type","onChange","pattern","required","button","content","Component","ContactList","contacts","onDeleteContact","list","map","id","item","onClick","Filter","store","createStore","console","log","App","filter","addContact","contact","find","toLowerCase","toast","warning","deleteContact","prevState","changeFilter","getVisibleContact","normilizeFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05a27256.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};","import { Component } from \"react\";\nimport shortid from 'shortid';\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n   nameInputId = shortid.generate();\n\n    state ={\n        name: '',\n        number: '',\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({'name' : '', 'number' : ''})\n      }\n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\n\nexport default Form;","import PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\nexport default ContactList;\n","import PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string.isRequired,\n        onChange: PropTypes.func.isRequired\n      }\n\nexport default Filter;","import { createStore } from 'redux';\n\nconst reducer = (state = '', action) => state;\n\nconst store = createStore(reducer);\n\nexport default store;\n","import { Component } from 'react';\nimport Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport store from './redux/store';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconsole.log(store);\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const { contacts } = this.state;\n\n    contacts.find(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? toast.warning(`${name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n\n    const normilizeFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normilizeFilter),\n    );\n  };\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n\n    const filteredContacts = this.getVisibleContact();\n\n    return (\n      <>\n        <Form onSubmit={this.addContact} />\n\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n        <ToastContainer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}