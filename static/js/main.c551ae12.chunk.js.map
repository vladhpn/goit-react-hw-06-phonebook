{"version":3,"sources":["components/ContactList/styles.module.scss","components/Form/styles.module.scss","redux/contacts/contacts-action.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Form/Form.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Filter/styles.module.scss"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","contacts","createReducer","actions","state","action","filter","_","combineReducers","persistConfig","key","storage","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Form","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","find","item","toLowerCase","toast","warning","reset","onSubmit","className","styles","title","this","form","label","text","input","type","onChange","pattern","required","button","content","Component","connect","dispatch","contactsActions","getVisibleContact","normilizeFilter","includes","onDeleteContact","list","map","onClick","e","target","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.c551ae12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__xjOlh\",\"item\":\"styles_item__wRJt2\",\"button\":\"styles_button__AJHCf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1YmCD\",\"form\":\"styles_form__3BTQv\",\"label\":\"styles_label__1Ku7G\",\"input\":\"styles_input__2RtgK\",\"text\":\"styles_text__2Muy-\",\"button\":\"styles_button__3_r4I\"};","import { createAction } from '@reduxjs/toolkit';\nimport shortid from 'shortid';\n\nconst addContact = createAction('contacts/Add', ({ name, number }) => ({\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contacts/Delete');\nconst changeFilter = createAction('contacts/ChangeFilter');\n\nexport default { addContact, deleteContact, changeFilter };\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-action';\n\nconst primeContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst contacts = createReducer(primeContacts, {\n  [actions.addContact]: (state, action) => [...state, action.payload],\n  [actions.deleteContact]: (state, action) =>\n    state.filter(({ id }) => id !== action.payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, action) => action.payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import { Component } from \"react\";\nimport { connect} from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport { toast } from 'react-toastify';\nimport styles from '../Form/styles.module.scss';\n\n\nclass Form extends Component{\n\n    state = {\n        name: '',\n        number: '',\n    }\n    handleInputChange = (event) => {\n        const { name, value } = event.currentTarget;\n        this.setState({\n          [name]: value,\n        });\n      };\n   \n\n      handleSubmit = (event) => {\n        event.preventDefault();\n\n        const { name } = this.state;\n        const { contacts } = this.props;\n        const findContact = contacts.find(\n          (item) => item.name.toLowerCase() === name.toLowerCase()\n        );\n        if (findContact) {\n          toast.warning(`${name} is already in contacts`);\n          this.reset();\n          return;\n        }\n\n        this.props.onSubmit(this.state );\n        this.reset();\n      };\n\n      reset = () => {\n          this.setState({name : '', number : ''})\n      }\n\n    render(){\n        return(<>\n        \n            <h1 className={styles.title}>Phone book</h1>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n              <label className={styles.label}>\n                <span className={styles.text}>Name</span>\n                <input className={styles.input}\n                  type='text'\n                  name='name'\n                  value={this.state.name}\n                  onChange={this.handleInputChange}\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                  required\n                />\n              </label>\n              <label className={styles.label}>\n                <span className={styles.text}>Phone</span>\n                <input className={styles.input}\n                  type='tel'\n                  name='number'\n                  value={this.state.number}\n                  onChange={this.handleInputChange}\n                  // pattern='(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})'\n                  title='Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +'\n                  required\n                />\n              </label>\n              <button className={styles.button} type='submit'><span className={styles.content}>Add contact</span> </button>\n            </form>\n            \n          </>)\n    }\n}\n\nconst mapStateToProps = ({ contacts: { contacts } }) => ({\n  contacts,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name,number) => dispatch(contactsActions.addContact(name,number))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","import { connect } from 'react-redux'\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport PropTypes from 'prop-types';\nimport styles from './styles.module.scss'\n\n\nconst ContactList = ({contacts, onDeleteContact }) =>{return (<>\n    <ul className={styles.list} >{contacts.map(({id, name, number}) => <li key={id} className={styles.item}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button className={styles.button} onClick={()=> onDeleteContact(id)}>Delete</button>\n        </li>)}\n        </ul> </>);\n    } \n\n    ContactList.propTypes = {\n     onDeleteContact: PropTypes.func.isRequired\n    }\n\n    const getVisibleContact = (contacts ,filter) => {\n    \n        const normilizeFilter = filter.toLowerCase();\n    \n        const filtered = contacts.filter(({name}) =>\n          name.toLowerCase().includes(normilizeFilter),\n        );\n        return  filtered;\n      };\n\n\n    const mapStateToProps = ({contacts: {contacts, filter}}) => ({\n        contacts: getVisibleContact(contacts, filter)\n    })\n    const mapDispatchToProps = dispatch => ({\n        onDeleteContact: (id) => dispatch(contactsActions.deleteContact(id)),\n    })\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-action'\nimport styles from './styles.module.scss'\n\nconst Filter = ({value, onChange}) => {\n    return(<>\n    <h2 className={styles.title}>Contacts</h2>  \n     <label className={styles.label}>\n       <span className={styles.text}>Find contacts by name</span> \n        \n          <input className={styles.input} type='text' value={value} onChange={onChange} />\n        \n      </label> </>)}\n\n      Filter.propTypes = {\n        value: PropTypes.string,\n        onChange: PropTypes.func.isRequired\n      }\n\n      const mapStateToProps = (state) => ({\n         value: state.contacts.filter\n    })\n     const mapDispatchToProps =  dispatch => ({\n       onChange: e => dispatch(contactsActions.changeFilter(e.target.value))\n     })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import Form from './components/Form';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'modern-normalize/modern-normalize.css';\n\nconst App = () => (\n  <>\n    <Form />\n    <Filter />\n    <ContactList />\n    <ToastContainer />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\n//\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2ThQ_\",\"label\":\"styles_label__1EQMF\",\"text\":\"styles_text__H1lwr\",\"input\":\"styles_input__3cObw\"};"],"sourceRoot":""}